---
name: CI Pipeline

on: [push, pull_request]

env:
  REGISTRY: k8scc01covidacr.azurecr.io

jobs:

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      # allows workflow to access the repo
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Kind
        uses: helm/kind-action@v1
        with: 
          registry: true
          registry_port: 5050

      - name: Create Kind cluster
        run: kind create cluster

      - name: Build docker files
        run: |
          docker build --progress=plain --no-cache -t localhost:5050/controller:test -f testing/controller/Dockerfile ..
          docker build --progress=plain --no-cache -t localhost:5050/scheduler:test -f testing/scheduler/Dockerfile ..

      - name: Push docker files to Kind cluster
        run: |
          docker push localhost:5050/controller:test
          docker push localhost:5050/scheduler:test
          kind load docker-image localhost:5050/controller:test
          kind load docker-image localhost:5050/scheduler:test

      - name: Apply cluster resources
        run: kubectl apply -f testing/manifests.yaml

      - name: Apply helper resources
        run: |
          kubectl apply -f manifests/rbac.yaml \
            -f manifests/serviceaccount.yaml \
            -f manifests/netpol.yaml

      - name: Apply configs
        run: |
          kubectl apply -f manifests/controller/controller_config.yaml \
            -f manifests/scheduler/scheduler_config.yaml \
            # -f manifests/scheduler/scheduler_secret.yaml\

      - name: Apply controller
        run: |
          kubectl apply -f testing/controller/controller_deployment.yaml
          sleep 5

      - name: Test label applied
        run: |
          if ! kubectl get pvc pvc1 -n anray-liu -o yaml | grep -q labels; then
              echo "No labels found. Test failed."
              exit 2
          else 
              OUTPUT="$(kubectl get pvc pvc1 -n anray-liu -o yaml | grep labels -A 1)"
              if [[ "${OUTPUT}" = *"volume-cleaner/unattached-time:"* ]]; then
                  echo "Test passed."
              else
                  echo "Output: ${OUTPUT}"
                  echo "Wrong label found. Test failed."
                  exit 2
              fi
          fi

      - name: Test label not applied
        run: |
          if ! kubectl get pvc pvc2 -n anray-liu -o yaml | grep -q labels; then
              echo "Test passed."
          else
              OUTPUT="$(kubectl get pvc pvc2 -n anray-liu -o yaml | grep labels)"
              echo "Output: ${OUTPUT}"
              echo "Labels found. Test failed."
              exit 2
          fi

      - name: Create stateful set
        run: |
          kubectl apply -f testing/sts.yaml
          sleep 5

      - name: Test label removed
        run: |
          if ! kubectl get pvc pvc1 -n anray-liu -o yaml | grep -q labels; then
              echo "Test passed."
          else
              OUTPUT="$(kubectl get pvc pvc1 -n anray-liu -o yaml | grep labels)"
              echo "Output: ${OUTPUT}"
              echo "Labels found. Test failed."
              exit 2
          fi

      - name: Delete stateful set
        run: |
          kubectl delete sts sts1 -n anray-liu
          sleep 5

      - name: Test label applied again
        run: |
          if ! kubectl get pvc pvc1 -n anray-liu -o yaml | grep -q labels; then
              echo "No labels found. Test failed."
              exit 2
          else
              OUTPUT="$(kubectl get pvc pvc1 -n anray-liu -o yaml | grep labels -A 1)"
              if [[ "${OUTPUT}" = *"volume-cleaner/unattached-time:"* ]]; then
                  echo "Test passed."
              else
                  echo "Output: ${OUTPUT}"
                  echo "Wrong label found. Test failed."
                  exit 2
              fi
          fi

      - name: Apply scheduler
        run: |
          kubectl apply -f testing/scheduler/scheduler_job.yaml
          sleep 5

      - name: Test scheduler processing
        run: |
          if ! kubectl logs -l app=volume-cleaner-scheduler -n das | grep "Found pvc pvc1 from namespace anray-liu"; then
              echo "Scheduler didn't find pvc1. Test failed."
              exit 2
          else
              if ! kubectl logs -l app=volume-cleaner-scheduler -n das | grep "Found pvc pvc1 from namespace anray-liu" -A 3 | grep "Grace period not passed. Skipping"; then
                  echo "Scheduler didn't skip pvc1. Test failed."
                  exit 2
              else
                  echo "Test passed."
              fi
          fi

      - name: Print logs
        run: |
          kubectl get pod -l app=volume-cleaner-controller -o yaml -n das
          kubectl logs -l app=volume-cleaner-controller -n das
          kubectl logs -l app=volume-cleaner-scheduler -n das

          kubectl get pvc pvc1 -n anray-liu -o yaml | grep labels:


